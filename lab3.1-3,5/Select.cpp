#include <iostream> // Подключаем библиотеку ввода-вывода

// Функция сортировки массива методом выбора
void selectionSort(int arr[], int n) {
    for (int i = 0; i < n - 1; ++i) {                   // Проходим цикл по элементам массива, кроме последнего
        int minIndex = i;                               // Предполагаем, что минимальный элемент находится здесь
        
        // Ищем наименьший элемент среди оставшихся элементов справа
        for (int j = i + 1; j < n; ++j) {
            if (arr[j] < arr[minIndex])                 // Если нашли меньший элемент...
                minIndex = j;                           // обновляем индекс минимального элемента
        }
    
        // Меняем местами найденный минимум с элементом на текущей позиции
        std::swap(arr[i], arr[minIndex]);               // swap() меняет элементы местами автоматически
    }
}

// Основная программа
int main() {
    const int size = 8;                                 // Количество элементов в массиве
    int array[] = {64, 25, 12, 22, 11, 90, 33, 4};     // Исходный несортированный массив
    
    std::cout << "Исходный массив:\n";
    for (int num : array)                              // Используем range-based циклы для вывода массива
        std::cout << num << ' ';
    std::cout << '\n';
    
    selectionSort(array, size);                         // Сортируем массив функцией выборочной сортировки
    
    std::cout << "\nОтсортированный массив:\n";
    for (int num : array)
        std::cout << num << ' ';                        // Вывод отсортированного массива
    std::cout << '\n';
    
    return 0;                                          // Завершаем программу успешно
}